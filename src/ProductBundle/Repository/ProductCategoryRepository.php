<?php

namespace ProductBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductCategoryRepository extends EntityRepository
{
    /**
     * 
     * @return type
     */
    public function getProducts($id = null, $order = 'p.id')
    {
        $qb = $this->createQueryBuilder('ps')
            ->select(
                  'p.id, '
                . 'p.name, '
                . 'p.description,'
                . 'p.price'
                )
            ->join('ps.product', 'p')
            ->where('p.deleted = false')
            ->groupBy('p')    
            ->orderBy($order);
        
        if (null !== $id) {
            $qb->andWhere('ps.category = :id')
                ->setParameter('id', $id);
        }
        
        return $qb->getQuery()->getScalarResult();
    }
    
    /**
     * 
     * @return type
     */
    public function getCategoryProducts($criteria = null)
    {
        $qb = $this->createQueryBuilder('pc')
            ->select(
                  'p.name,'
                . 'p.description,'
                . 'p.price,'
                . 'b.name as brandName'
                )
            ->join('pc.category', 'c')
            ->join('pc.product','p')
            ->join('p.brand','b')
            ->where('c.deleted = false');
        
         if (null !== $criteria) {
            if (isset($criteria['categoryUrl'])) {
                 $qb->andWhere('c.url = :url')
                    ->setParameter('url', $criteria['categoryUrl']);
            }
        }
        
        return $qb->getQuery()->getScalarResult();
    }
}
