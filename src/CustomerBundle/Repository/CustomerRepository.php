<?php

namespace CustomerBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends \Doctrine\ORM\EntityRepository
{
    /**
    *
    * @param type $criteria
    * @return type
    */
    public function getCustomers($criteria = null) 
    {
        $qb = $this->createQueryBuilder('customer')
            ->select(
                'customer.id,'
               .'customer.firstName,'
               .'customer.lastName'
                )
            ->where('customer.deleted = false');

        $customers = $qb->getQuery()->getScalarResult();

        return $customers;
    }
    
    /**
     * 
     * @return type
    */
    public function getCustomer($id)
    {
        $qb = $this->createQueryBuilder('cus')
            ->select(
                  'cus.id,'
                . 'cus.firstName,'
                . 'cus.lastName,'
                . 'cus.email,'
                . 'cus.phoneNumber'

                )
            ->where('cus.id = :id')
            ->setParameter('id', $id);
        
        $customer = $qb->getQuery()->getSingleResult();
        
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->from('CustomerBundle:Order', 'ord')
            ->select(
                  'ord.id, '
                . 'ord.orderDate '
                )
            ->where('ord.deleted = false AND ord.customer = :cus')
            ->setParameter('cus', $customer['id']);

        $customer['orders'] = $qb->getQuery()->getScalarResult();//yani hasele
        //query ra be surate array be objecte customer ezafe kon
        
        return $customer;
    }    
}
