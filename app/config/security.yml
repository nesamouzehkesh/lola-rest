# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    
    #encoders:
    #    UserBundle\Entity\User:
    #        id: app.md5encoder
    
    #encoders:
    #    Symfony\Component\Security\Core\User\User: plaintext
    encoders:
        UserBundle\Entity\User:
            id: app.md5encoder.service
            
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    #providers:
    #    in_memory:
    #        memory:
    #            users:
    #                user:  { password: password, roles: [ 'ROLE_USER' ] }
    #                admin: { password: password, roles: [ 'ROLE_ADMIN' ] }    
    
    providers:
        administrators:
            entity: { class: UserBundle:User }    

    firewalls:
        #dev:
        #    pattern:  ^/api/(_(profiler|wdt|doc))/
        #    security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path: api_login_check
                require_previous_session: false
                username_parameter: username
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api/_admin
            stateless: true
            lexik_jwt:
                authorization_header:
                    enabled: true
                    prefix:  Bearer
                query_parameter:
                    enabled: true
                    name:    bearer

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin, roles: IS_AUTHENTICATED_FULLY }